@using API.Models.DTO

@code {
    [Parameter] public KieuDangDTO FormData { get; set; } = new();
    [Parameter] public EventCallback OnSubmit { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public bool IsEdit { get; set; }
}

@if (IsVisible)
{
    <div class="popup-overlay">
        <div class="popup-form card p-4 shadow">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="mb-0">@((IsEdit ? "✏️ Sửa" : "➕ Thêm") + " kiểu dáng")</h5>
                <button class="btn-close" @onclick="() => OnClose.InvokeAsync()"></button>
            </div>

            <div class="mb-3">
                <label class="form-label">Tên kiểu dáng</label>
                <input class="form-control" @bind="FormData.TenKieuDang" />
            </div>

            <div class="mb-3">
                <label class="form-label">Mô tả</label>
                <textarea class="form-control" @bind="FormData.MoTa"></textarea>
            </div>

            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" @bind="FormData.TrangThai" />
                <label class="form-check-label">Hiển thị</label>
            </div>

            <div class="d-flex justify-content-end">
                <button class="btn btn-danger me-2" @onclick="() => OnClose.InvokeAsync()">Đóng</button>
                <button class="btn btn-warning" @onclick="() => OnSubmit.InvokeAsync()">
                    @(IsEdit ? "Lưu" : "Thêm")
                </button>
            </div>
        </div>
    </div>
}
