@page "/admin/thuonghieu"
@rendermode InteractiveServer

@using Data.Models
@using BlazorAdmin.Service.IService

@inject IJSRuntime JS
@inject IThuongHieuService ThuongHieuService








<h2 class="text-primary mb-4">
    <i class="fa-solid fa-building-flag"></i> Quản lý Thương Hiệu
</h2>

<button class="btn btn-primary mb-3" @onclick="ShowAddModal">
    <i class="fa fa-plus"></i> Thêm thương hiệu
</button>

<ThuongHieuModal Model="Model"
                 Title="@(ModalTitle)"
                 IsVisible="IsModalVisible"
                 OnValidSubmit="HandleValidSubmit"
                 OnCancel="CloseModal" />

<!-- Table -->
<table class="table table-bordered table-hover">
    <thead class="table-primary">
        <tr>
            <th>#</th>
            <th>Tên</th>
            <th>Email</th>
            <th>SĐT</th>
            <th>Địa chỉ</th>
            <th>Trạng thái</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @if (ThuongHieus != null && ThuongHieus.Count > 0)
        {
            @foreach (var item in ThuongHieus.Select((x, i) => new { x, i }))
            {
                <tr>
                    <td>@(item.i + 1)</td>
                    <td>@item.x.Ten</td>
                    <td>@item.x.Email</td>
                    <td>@item.x.Sdt</td>
                    <td>@item.x.DiaChi</td>
                    <td>
                        @if (item.x.TrangThai)
                        {
                            <span class="badge bg-success">Hoạt động</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Ngừng</span>
                        }
                    </td>
                    <td>
                        <button class="btn btn-sm btn-warning me-1" @onclick="() => Edit(item.x)">
                            <i class="fa fa-edit"></i>
                        </button>
                        <button class="btn btn-sm btn-danger" @onclick="() => Delete(item.x.Id)">
                            <i class="fa fa-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7" class="text-center text-muted">Không có dữ liệu</td>
            </tr>
        }
    </tbody>
</table>

@code {
    public class ThuongHieuModel
    {
        public string Id { get; set; } = Guid.NewGuid().ToString();
        public string Ten { get; set; }
        public string Email { get; set; }
        public string Sdt { get; set; }
        public string DiaChi { get; set; }
        public string MoTa { get; set; }
        public bool TrangThai { get; set; } = true;
    }

    private List<ThuongHieuModel> ThuongHieus = new();
    private ThuongHieuModel Model = new();
    private string ModalTitle = "Thêm Thương Hiệu";
    private bool IsModalVisible = false;

    void ShowAddModal()
    {
        Model = new ThuongHieuModel();
        ModalTitle = "Thêm Thương Hiệu";
        IsModalVisible = true;
    }

    void Edit(ThuongHieuModel item)
    {
        Model = new ThuongHieuModel
        {
            Id = item.Id,
            Ten = item.Ten,
            Email = item.Email,
            Sdt = item.Sdt,
            DiaChi = item.DiaChi,
            MoTa = item.MoTa,
            TrangThai = item.TrangThai
        };
        ModalTitle = "Sửa Thương Hiệu";
        IsModalVisible = true;
    }

    void Delete(string id)
    {
        var item = ThuongHieus.FirstOrDefault(x => x.Id == id);
        if (item != null)
        {
            ThuongHieus.Remove(item);
        }
    }

    void CloseModal()
    {
        IsModalVisible = false;
    }

    void HandleValidSubmit()
    {
        var existing = ThuongHieus.FirstOrDefault(x => x.Id == Model.Id);
        if (existing != null)
        {
            existing.Ten = Model.Ten;
            existing.Email = Model.Email;
            existing.Sdt = Model.Sdt;
            existing.DiaChi = Model.DiaChi;
            existing.MoTa = Model.MoTa;
            existing.TrangThai = Model.TrangThai;
        }
        else
        {
            ThuongHieus.Add(new ThuongHieuModel
            {
                Id = Model.Id,
                Ten = Model.Ten,
                Email = Model.Email,
                Sdt = Model.Sdt,
                DiaChi = Model.DiaChi,
                MoTa = Model.MoTa,
                TrangThai = Model.TrangThai
            });
        }
        IsModalVisible = false;
    }
}