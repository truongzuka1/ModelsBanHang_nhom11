@page "/ThemDotGiamGia"
@page "/ThemDotGiamGia/{Id:guid}"

@using Data.Models
@using API.Models.DTO
@using BlazorAdmin.Service.IService
@inject IGiamGiaService GiamGiaService
@inject IGiayChiTietService GiayChiTietService
@inject NavigationManager Navigation

@rendermode InteractiveServer

<h3 class="mb-3">
    <i class="bi bi-plus-circle"></i> @(Id.HasValue ? "Chỉnh sửa Đợt Khuyến Mại" : "Thêm Đợt Khuyến Mại")
</h3>

<div class="card shadow-sm p-4">
    <EditForm Model="dot" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }

        <!-- Tên đợt -->
        <div class="mb-3">
            <label class="form-label">Tên đợt</label>
            <InputText class="form-control" @bind-Value="dot.TenGiamGia" />
            <ValidationMessage For="@(() => dot.TenGiamGia)" />
        </div>

        <!-- Phần trăm giảm -->
        <div class="mb-3">
            <label class="form-label">Giảm (%)</label>
            <InputNumber class="form-control" @bind-Value="dot.PhanTramKhuyenMai" />
            <ValidationMessage For="@(() => dot.PhanTramKhuyenMai)" />
        </div>

        <!-- Thời gian -->
        <div class="mb-3">
            <label class="form-label">Thời gian áp dụng</label>
            <div class="d-flex gap-2">
                <div class="flex-fill">
                    <InputDate class="form-control" @bind-Value="dot.NgayBatDau" />
                    <ValidationMessage For="@(() => dot.NgayBatDau)" />
                </div>
                <div class="flex-fill">
                    <InputDate class="form-control" @bind-Value="dot.NgayKetThuc" />
                    <ValidationMessage For="@(() => dot.NgayKetThuc)" />
                </div>
            </div>
        </div>

        <!-- Danh sách giày áp dụng -->
        <div class="mb-3">
            <label class="form-label fw-bold">Sản phẩm được áp dụng (theo màu/số)</label>
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-2">
                @foreach (var sp in danhSachChiTiet)
                {
                    var isChecked = chiTietChon.Contains(sp.GiayChiTietId);
                    <div class="col">
                        <label class="form-check-label w-100 border rounded p-2 d-flex align-items-start gap-2 @(isChecked ? "bg-light border-primary" : "")"
                               style="cursor: pointer;">
                            <input type="checkbox"
                                   class="form-check-input mt-1"
                                   checked="@isChecked"
                                   @onchange="() => ToggleChiTiet(sp.GiayChiTietId)" />
                            <div>
                                <div class="fw-bold">@sp.TenGiay</div>
                                <div class="small text-muted">
                                    Màu: @sp.TenMau | Size: @sp.size<br />
                                    @if (sp.DaGiamGia)
                                    {
                                        <span>
                                            <del>@sp.GiaGoc.ToString("N0") đ</del> ➝
                                            <strong class="text-danger">@sp.Gia.ToString("N0") đ</strong>
                                        </span>
                                    }
                                    else
                                    {
                                        <span>Giá: @sp.Gia.ToString("N0") đ</span>
                                    }
                                </div>
                            </div>
                        </label>
                    </div>
                }
            </div>
        </div>

        <!-- Hành động -->
        <div class="d-flex justify-content-end mt-3">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-save"></i> Lưu
            </button>
            <button type="button" class="btn btn-secondary ms-2" @onclick='() => Navigation.NavigateTo("/DotGiamGia")'>
                <i class="bi bi-arrow-left-circle"></i> Quay lại
            </button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter] public Guid? Id { get; set; }

    private GiamGiaCreateDTO dot = new();
    private string? errorMessage;

    private List<GiayChiTietDTO> danhSachChiTiet = new();
    private List<Guid> chiTietChon = new();

    protected override async Task OnInitializedAsync()
    {
        danhSachChiTiet = await GiayChiTietService.GetAllAsync();

        if (Id.HasValue)
        {
            var existing = await GiamGiaService.GetByIdAsync(Id.Value);
            if (existing != null)
            {
                dot = new GiamGiaCreateDTO
                    {
                        GiamGiaId = existing.GiamGiaId,
                        TenGiamGia = existing.TenGiamGia,
                        SanPhamKhuyenMai = existing.SanPhamKhuyenMai,
                        PhanTramKhuyenMai = existing.PhanTramKhuyenMai,
                        NgayBatDau = existing.NgayBatDau,
                        NgayKetThuc = existing.NgayKetThuc,
                        TrangThai = existing.TrangThai,
                        GiayChiTietIds = existing.GiayDotGiamGias?
                            .Where(x => x.GiayChiTietId.HasValue)
                            .Select(x => x.GiayChiTietId!.Value)
                            .ToList() ?? new()
                    };

                chiTietChon = dot.GiayChiTietIds.ToList();
            }
        }
        else
        {
            dot = new GiamGiaCreateDTO
                {
                    NgayBatDau = DateTime.Today,
                    NgayKetThuc = DateTime.Today.AddDays(7),
                    TrangThai = true,
                    SanPhamKhuyenMai = "Nhiều sản phẩm"
                };
        }
    }

    private void ToggleChiTiet(Guid id)
    {
        if (chiTietChon.Contains(id))
            chiTietChon.Remove(id);
        else
            chiTietChon.Add(id);
    }

    private async Task HandleSubmit()
    {
        errorMessage = null;
        dot.GiayChiTietIds = chiTietChon;

        if (dot.NgayKetThuc < dot.NgayBatDau)
        {
            errorMessage = "Ngày kết thúc phải sau ngày bắt đầu.";
            return;
        }

        HttpResponseMessage response = Id.HasValue
            ? await GiamGiaService.UpdateAsyncReturnResponse(dot)
            : await GiamGiaService.AddAsync(dot);

        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/DotGiamGia");
        }
        else
        {
            var content = await response.Content.ReadAsStringAsync();
            errorMessage = $"Không lưu được: {content}";
        }
    }
}
