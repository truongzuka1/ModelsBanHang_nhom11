// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DbContextApp))]
    partial class DbContextAppModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.NhanVien", b =>
                {
                    b.Property<Guid>("NhanVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChucVuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayCapNhatCuoiCung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TaikhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("NhanVienId");

                    b.HasIndex("ChucVuId");

                    b.HasIndex("TaikhoanId");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("Data.Models.Anh", b =>
                {
                    b.Property<Guid>("AnhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("AnhId");

                    b.ToTable("Anhs");
                });

            modelBuilder.Entity("Data.Models.ChatLieu", b =>
                {
                    b.Property<Guid>("ChatLieuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChatLieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("ChatLieuId");

                    b.ToTable("ChatLieus");
                });

            modelBuilder.Entity("Data.Models.ChucVu", b =>
                {
                    b.Property<Guid>("ChucVuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MotaChucVu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("ChucVuId");

                    b.ToTable("ChucVus");

                    b.HasData(
                        new
                        {
                            ChucVuId = new Guid("11111111-1111-1111-1111-111111111111"),
                            MotaChucVu = "Quản trị hệ thống",
                            TenChucVu = "Admin",
                            TrangThai = 1
                        },
                        new
                        {
                            ChucVuId = new Guid("22222222-2222-2222-2222-222222222222"),
                            MotaChucVu = "Nhân viên bán hàng",
                            TenChucVu = "NhanVien",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Data.Models.DeGiay", b =>
                {
                    b.Property<Guid>("DeGiayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KichCo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDeGiay")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("DeGiayId");

                    b.ToTable("DeGiays");
                });

            modelBuilder.Entity("Data.Models.DiaChiKhachHang", b =>
                {
                    b.Property<Guid>("DiaChiKhachHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDiaChi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<Guid>("khachHangId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DiaChiKhachHangId");

                    b.HasIndex("khachHangId");

                    b.ToTable("diaChiKhachHangs");
                });

            modelBuilder.Entity("Data.Models.GiamGia", b =>
                {
                    b.Property<Guid>("GiamGiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<float>("PhanTramKhuyenMai")
                        .HasColumnType("real");

                    b.Property<string>("SanPhamKhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGiamGia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("GiamGiaId");

                    b.ToTable("GiamGias");
                });

            modelBuilder.Entity("Data.Models.Giay", b =>
                {
                    b.Property<Guid>("GiayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenGiay")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("GiayId");

                    b.ToTable("Giays");
                });

            modelBuilder.Entity("Data.Models.GiayChiTiet", b =>
                {
                    b.Property<Guid>("GiayChiTietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhGiay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AnhId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChatLieuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeGiayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Gia")
                        .HasColumnType("real");

                    b.Property<Guid>("GiayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KichCoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KieuDangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MauSacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuongCon")
                        .HasColumnType("int");

                    b.Property<Guid?>("TheLoaiGiayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ThuongHieuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("GiayChiTietId");

                    b.HasIndex("AnhId");

                    b.HasIndex("ChatLieuId");

                    b.HasIndex("DeGiayId");

                    b.HasIndex("GiayId");

                    b.HasIndex("KichCoId");

                    b.HasIndex("KieuDangId");

                    b.HasIndex("MauSacId");

                    b.HasIndex("TheLoaiGiayId");

                    b.HasIndex("ThuongHieuId");

                    b.ToTable("GiayChiTiets");
                });

            modelBuilder.Entity("Data.Models.GiayDotGiamGia", b =>
                {
                    b.Property<Guid>("GiayDotGiamGiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GiamGiaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GiayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GiayDotGiamGiaId");

                    b.HasIndex("GiamGiaId");

                    b.HasIndex("GiayId");

                    b.ToTable("GiayDotGiamGias");
                });

            modelBuilder.Entity("Data.Models.GioHang", b =>
                {
                    b.Property<Guid>("GioHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KhachHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayCapNhatCuoiCung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTaoGioHang")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("GioHangId");

                    b.HasIndex("KhachHangId");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("Data.Models.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("GioHangChiTietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("GiayChiTietId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GiayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GioHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuongSanPham")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("GioHangChiTietId");

                    b.HasIndex("GiayChiTietId");

                    b.HasIndex("GiayId");

                    b.HasIndex("GioHangId");

                    b.ToTable("GioHangChiTiets");
                });

            modelBuilder.Entity("Data.Models.HinhThucThanhToan", b =>
                {
                    b.Property<Guid>("HinhThucThanhToanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHinhThuc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HinhThucThanhToanId");

                    b.ToTable("hinhThucThanhToans");
                });

            modelBuilder.Entity("Data.Models.HoaDon", b =>
                {
                    b.Property<Guid>("HoaDonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailCuaKhachHang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("HinhThucThanhToanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("KhachHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayNhanHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDTCuaKhachHang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("TaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenCuaKhachHang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("TongTienSauKhiGiam")
                        .HasColumnType("real");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HoaDonId");

                    b.HasIndex("HinhThucThanhToanId");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("TaiKhoanId");

                    b.HasIndex("VoucherId");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("Data.Models.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("HoaDonChiTietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("GiayChiTietId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GiaysGiayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuongSanPham")
                        .HasColumnType("int");

                    b.HasKey("HoaDonChiTietId");

                    b.HasIndex("GiaysGiayId");

                    b.HasIndex("HoaDonId");

                    b.ToTable("HoaDonChiTiets");
                });

            modelBuilder.Entity("Data.Models.KhachHang", b =>
                {
                    b.Property<Guid>("KhachHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayCapNhatCuoiCung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("KhachHangId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("Data.Models.KichCo", b =>
                {
                    b.Property<Guid>("KichCoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKichCo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("KichCoId");

                    b.ToTable("KichCos");
                });

            modelBuilder.Entity("Data.Models.KieuDang", b =>
                {
                    b.Property<Guid>("KieuDangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKieuDang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("KieuDangId");

                    b.ToTable("KieuDangs");
                });

            modelBuilder.Entity("Data.Models.MauSac", b =>
                {
                    b.Property<Guid>("MauSacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MauSacId");

                    b.ToTable("MauSacs");
                });

            modelBuilder.Entity("Data.Models.TaiKhoan", b =>
                {
                    b.Property<Guid>("TaikhoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Ngaytaotaikhoan")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaikhoanId");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("Data.Models.TheLoaiGiay", b =>
                {
                    b.Property<Guid>("TheLoaiGiayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTheLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("TheLoaiGiayId");

                    b.ToTable("TheLoaiGiays");
                });

            modelBuilder.Entity("Data.Models.ThuongHieu", b =>
                {
                    b.Property<Guid>("ThuongHieuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("ThuongHieuId");

                    b.ToTable("ThuongHieus");
                });

            modelBuilder.Entity("Data.Models.Voucher", b =>
                {
                    b.Property<Guid>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<float>("PhanTram")
                        .HasColumnType("real");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<Guid>("TaikhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenVoucher")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("VoucherId");

                    b.HasIndex("TaikhoanId");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("API.Models.NhanVien", b =>
                {
                    b.HasOne("Data.Models.ChucVu", "ChucVu")
                        .WithMany("nhanViens")
                        .HasForeignKey("ChucVuId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Models.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("TaikhoanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ChucVu");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Data.Models.DiaChiKhachHang", b =>
                {
                    b.HasOne("Data.Models.KhachHang", "KhachHang")
                        .WithMany("DiaChiKhachHangs")
                        .HasForeignKey("khachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("Data.Models.GiayChiTiet", b =>
                {
                    b.HasOne("Data.Models.Anh", "Anh")
                        .WithMany("GiayChiTiets")
                        .HasForeignKey("AnhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.ChatLieu", "ChatLieu")
                        .WithMany("GiayChiTiets")
                        .HasForeignKey("ChatLieuId");

                    b.HasOne("Data.Models.DeGiay", "DeGiay")
                        .WithMany("GiayChiTiets")
                        .HasForeignKey("DeGiayId");

                    b.HasOne("Data.Models.Giay", "Giay")
                        .WithMany("GiayChiTiets")
                        .HasForeignKey("GiayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.KichCo", "KichCo")
                        .WithMany("GiayChiTiets")
                        .HasForeignKey("KichCoId");

                    b.HasOne("Data.Models.KieuDang", "KieuDang")
                        .WithMany("GiayChiTiets")
                        .HasForeignKey("KieuDangId");

                    b.HasOne("Data.Models.MauSac", "MauSac")
                        .WithMany("GiayChiTiets")
                        .HasForeignKey("MauSacId");

                    b.HasOne("Data.Models.TheLoaiGiay", "TheLoaiGiay")
                        .WithMany("GiayChiTiets")
                        .HasForeignKey("TheLoaiGiayId");

                    b.HasOne("Data.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("GiayChiTiets")
                        .HasForeignKey("ThuongHieuId");

                    b.Navigation("Anh");

                    b.Navigation("ChatLieu");

                    b.Navigation("DeGiay");

                    b.Navigation("Giay");

                    b.Navigation("KichCo");

                    b.Navigation("KieuDang");

                    b.Navigation("MauSac");

                    b.Navigation("TheLoaiGiay");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("Data.Models.GiayDotGiamGia", b =>
                {
                    b.HasOne("Data.Models.GiamGia", "GiamGia")
                        .WithMany("GiayDotGiamGias")
                        .HasForeignKey("GiamGiaId");

                    b.HasOne("Data.Models.Giay", "Giay")
                        .WithMany("GiayDotGiamGias")
                        .HasForeignKey("GiayId");

                    b.Navigation("GiamGia");

                    b.Navigation("Giay");
                });

            modelBuilder.Entity("Data.Models.GioHang", b =>
                {
                    b.HasOne("Data.Models.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("Data.Models.GioHangChiTiet", b =>
                {
                    b.HasOne("Data.Models.GiayChiTiet", "GiayChiTiet")
                        .WithMany()
                        .HasForeignKey("GiayChiTietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Giay", null)
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("GiayId");

                    b.HasOne("Data.Models.GioHang", "GioHang")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("GioHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiayChiTiet");

                    b.Navigation("GioHang");
                });

            modelBuilder.Entity("Data.Models.HoaDon", b =>
                {
                    b.HasOne("Data.Models.HinhThucThanhToan", "hinhThucThanhToan")
                        .WithMany("HoaDons")
                        .HasForeignKey("HinhThucThanhToanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Data.Models.KhachHang", "khachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("KhachHangId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Models.TaiKhoan", "taiKhoan")
                        .WithMany("hoaDons")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Data.Models.Voucher", "voucher")
                        .WithMany("HoaDons")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("hinhThucThanhToan");

                    b.Navigation("khachHang");

                    b.Navigation("taiKhoan");

                    b.Navigation("voucher");
                });

            modelBuilder.Entity("Data.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("Data.Models.Giay", "Giays")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("GiaysGiayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.HoaDon", "HoaDons")
                        .WithMany("HoaDonChiTietsId")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Giays");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("Data.Models.KhachHang", b =>
                {
                    b.HasOne("Data.Models.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Data.Models.Voucher", b =>
                {
                    b.HasOne("Data.Models.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("TaikhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Data.Models.Anh", b =>
                {
                    b.Navigation("GiayChiTiets");
                });

            modelBuilder.Entity("Data.Models.ChatLieu", b =>
                {
                    b.Navigation("GiayChiTiets");
                });

            modelBuilder.Entity("Data.Models.ChucVu", b =>
                {
                    b.Navigation("nhanViens");
                });

            modelBuilder.Entity("Data.Models.DeGiay", b =>
                {
                    b.Navigation("GiayChiTiets");
                });

            modelBuilder.Entity("Data.Models.GiamGia", b =>
                {
                    b.Navigation("GiayDotGiamGias");
                });

            modelBuilder.Entity("Data.Models.Giay", b =>
                {
                    b.Navigation("GiayChiTiets");

                    b.Navigation("GiayDotGiamGias");

                    b.Navigation("GioHangChiTiets");

                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("Data.Models.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("Data.Models.HinhThucThanhToan", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("Data.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTietsId");
                });

            modelBuilder.Entity("Data.Models.KhachHang", b =>
                {
                    b.Navigation("DiaChiKhachHangs");

                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("Data.Models.KichCo", b =>
                {
                    b.Navigation("GiayChiTiets");
                });

            modelBuilder.Entity("Data.Models.KieuDang", b =>
                {
                    b.Navigation("GiayChiTiets");
                });

            modelBuilder.Entity("Data.Models.MauSac", b =>
                {
                    b.Navigation("GiayChiTiets");
                });

            modelBuilder.Entity("Data.Models.TaiKhoan", b =>
                {
                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("Data.Models.TheLoaiGiay", b =>
                {
                    b.Navigation("GiayChiTiets");
                });

            modelBuilder.Entity("Data.Models.ThuongHieu", b =>
                {
                    b.Navigation("GiayChiTiets");
                });

            modelBuilder.Entity("Data.Models.Voucher", b =>
                {
                    b.Navigation("HoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
